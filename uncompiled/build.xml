<?xml version="1.0" encoding="utf-8"?>
 
<!-- Update the project name and folder locations for this project. -->
	<project name="Elevate 300" default="build">

    <!-- My Closure folder location from this directory -->
    <property name="closure.dir" value="${basedir}/../../../closure" />

		<!-- Recommended folder structure (that you hopefully used when doing SVN checkouts)
		   closure (the closure.dir path found above) should have the sub folders:
		    - closure-compiler  (svn checkout of http://closure-compiler.googlecode.com/svn/trunk/)
		    - closure-library   (svn checkout of http://closure-library.googlecode.com/svn/trunk/)
		    - closure-templates (svn checkout of http://closure-templates.googlecode.com/svn/trunk/)
		-->
		
    <!-- Path to this file from base.js (wierd thing used by depswriter.py) -->
    <property name="fromBase.dir"
        value="../../../../AppEngine/elevate300/uncompiled" />

    <!-- Output Build Directory -->
    <property name="build.dir" value="${basedir}/../js" />

<!-- Convenience locations that don't need to change (if you used the recommended folder structure) -->

    <!-- The compiler jar file (present after you do a "ant jar" build in the closure-compiler folder) -->
    <property name="compiler.jar" value="${closure.dir}/closure-compiler/build/compiler.jar" />
	
    <!-- Library Directory -->
    <property name="closure-library.dir" value="${closure.dir}/closure-library" />


<!-- Reuseable commands -->

  <!-- depswriter.py to map dependencies for uncompiled mode -->
  <macrodef name="depswriter">
    <attribute name="pathFromCurrentDir" />
    <attribute name="pathFromLibraryBase" />
    <attribute name="outputfile" />
    <element name="extraflags" optional="yes"/>
    <sequential>
      <exec executable="python" failonerror="true" logError="true">
        <arg value="${closure-library.dir}/closure/bin/build/depswriter.py" />
        <arg line='--root_with_prefix="@{pathFromCurrentDir} @{pathFromLibraryBase}"' />
        <arg line='--output_file="@{outputfile}"' />
        <extraflags />
      </exec>
    </sequential>
  </macrodef>
		
  <!-- Note: I deleted the Soy templates generator in this version.  -->

  <!-- closurebuilder.py to compile the JavaScript -->
	<!-- If you have multiple roots or multiple namespaces use the extraflags -->
  <macrodef name="closure-builder">
    <attribute name="root" />
    <attribute name="namespace" />
    <attribute name="outputfile" />
    <attribute name="compilerjarfile" default="${compiler.jar}" />
    <attribute name="compilationlevel" default="ADVANCED_OPTIMIZATIONS" />
    <attribute name="outputmode" default="compiled" />
    <element name="extraflags" optional="yes"/>
    <sequential>
      <exec executable="python" failonerror="true" logError="true">
        <arg value="${closure-library.dir}/closure/bin/build/closurebuilder.py" />
        <arg line='--root="${closure-library.dir}"' />
        <arg line='--root="@{root}"' />
        <arg line='--namespace="@{namespace}"' />
        <arg line='--output_mode=@{outputmode}' />
        <arg line='--compiler_jar="@{compilerjarfile}"' />
        <arg line='--output_file="@{outputfile}"' />
        <arg line='--compiler_flags="--compilation_level=@{compilationlevel}"' />
        <arg line='--compiler_flags="--js=${closure-library.dir}/closure/goog/deps.js"' />
        <arg line='--compiler_flags="--warning_level=VERBOSE"' />
        <extraflags />
      </exec>
    </sequential>
  </macrodef>
	
	
<!-- Targets -->
	
	<!-- Note: Deleted the clean target in this version since the build folder has other stuff in it.  -->
	
  <target name="gen_js_deps" description="generates deps.js">
    <depswriter
    	pathFromCurrentDir = 'js'
    	pathFromLibraryBase = '${fromBase.dir}/js'
    	outputFile='${basedir}/deps.js'>
  	</depswriter>
  </target>
	
	<!-- Options for the compilationlevels:
		WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS" -->
  
	<!-- extraflags you might want to add (replace XX with two hypens) -->
    <!-- <arg line='XXcompiler_flags="XXjscomp_error=checkTypes"' /> -->
    <!-- <arg line='XXroot=folder/with/other/js/files' /> -->
    <!-- <arg line='XXnamespace=yournamespace.yourmodule' /> -->
    <!-- <arg line='XXcompiler_flags="XXformatting=PRETTY_PRINT"' /> -->
    <!-- <arg line='XXcompiler_flags="XXformatting=PRINT_INPUT_DELIMITER"' /> -->
    <!-- <arg line='XXcompiler_flags="XXdebug=true"' /> -->		
    <!-- <arg line='XXcompiler_flags="XXgenerate_exports=true"' /> -->		
    <!-- <arg line='XXcompiler_flags="XXexterns=someFileWithExterns.js"' /> -->


  <target name="all_js" description="generates all.js">
    <closure-builder
      root='${basedir}/js/'
      namespace='elevate300.Transaction'
      outputfile="${build.dir}/elevate300.js"
      compilationlevel="ADVANCED_OPTIMIZATIONS" >
      <extraflags>
        <!--<arg line='XXcompiler_flags="XXformatting=PRETTY_PRINT"' />
        <arg line='XXcompiler_flags="XXdebug=true"' /> -->   
        <arg line='--compiler_flags="--jscomp_error=checkTypes"' />
        <arg line='--namespace=elevate300.Trip' />
        <arg line='--namespace=elevate300.Options' />
        <arg line='--namespace=elevate300.Leaderboard' />
        <arg line='--namespace=elevate300.HomeLoggedIn' />
        <arg line='--namespace=elevate300.Info' />
      </extraflags>
    </closure-builder>
  </target>
	
	<target name="build" depends="gen_js_deps, all_js" />
    
</project>